---
import Logo from "./Logo.astro";

const navItems = [
  { name: "Practice", url: "/practice" },
  { name: "Process", url: "/process" },
  { name: "Projects", url: "/projects" },
  { name: "Stories", url: "/stories" },
  { name: "Contact", url: "/contact" },
];

const pathname = Astro.url.pathname;
---

<header class="py-6 px-6 md:px-20 bg-white max-w-[1440px] w-full mx-auto">
  <div class="flex justify-between items-center">
    <a href="/" class="text-xl font-light tracking-tighter z-40">
      <Logo />
    </a>

    <nav class="hidden md:block">
      <ul class="flex space-x-8">
        {
          navItems.map((item) => (
            <li>
              <a
                href={item.url}
                class={`text-sm hover:text-black transition-colors ${pathname.startsWith(item.url) ? "text-black" : "text-gray-500"}`}
              >
                {item.name}
              </a>
            </li>
          ))
        }
      </ul>
    </nav>

    <button
      class="md:hidden z-40 relative"
      id="menu-toggle"
      aria-label="Toggle menu"
    >
      <div class="w-6 h-5 flex flex-col justify-between overflow-hidden">
        <span
          class="w-full h-0.5 bg-black transform transition-all duration-300 origin-left menu-line-1"
        ></span>
        <span
          class="w-full h-0.5 bg-black transition-all duration-300 menu-line-2 origin-center"
        ></span>
        <span
          class="w-full h-0.5 bg-black transform transition-all duration-300 origin-left menu-line-3"
        ></span>
      </div>
    </button>
  </div>

  <div
    class="mobile-menu fixed inset-0 bg-white pt-24 px-6 hidden md:hidden h-screen w-screen z-30"
    id="mobile-menu"
  >
    <ul class="space-y-8">
      {
        navItems.map((item) => (
          <li>
            <a
              href={item.url}
              class={`block py-2 text-2xl font-light hover:text-black transition-colors ${pathname.startsWith(item.url) ? "text-black" : "text-gray-500"}`}
            >
              {item.name}
            </a>
          </li>
        ))
      }
    </ul>
  </div>
</header>

<script>
  const setupMobileMenu = () => {
    const menuToggle = document.getElementById("menu-toggle");
    const mobileMenu = document.getElementById("mobile-menu");
    const body = document.body;
    const menuLine1 = document.querySelector(".menu-line-1");
    const menuLine2 = document.querySelector(".menu-line-2");
    const menuLine3 = document.querySelector(".menu-line-3");

    if (!menuToggle || !mobileMenu) return;
    if (menuToggle.dataset.bound) return;
    menuToggle.dataset.bound = "true";

    const handleToggle = (e: { preventDefault: () => void }) => {
      e.preventDefault();
      mobileMenu.classList.toggle("hidden");
      body.classList.toggle("overflow-hidden");

      menuLine1?.classList.toggle("rotate-45");
      menuLine1?.classList.toggle("translate-x-1");
      menuLine1?.classList.toggle("translate-y-[1px]");
      menuLine2?.classList.toggle("scale-x-0");
      menuLine3?.classList.toggle("-rotate-45");
      menuLine3?.classList.toggle("translate-x-1");
    };

    menuToggle.addEventListener("click", handleToggle);
    menuToggle.addEventListener("touchstart", handleToggle);
  };

  if (document.readyState !== "loading") {
    setupMobileMenu(); // DOM is ready already
  } else {
    document.addEventListener("DOMContentLoaded", setupMobileMenu);
  }

  // Re-run on client-side navigation
  document.addEventListener("astro:page-load", setupMobileMenu);
</script>
